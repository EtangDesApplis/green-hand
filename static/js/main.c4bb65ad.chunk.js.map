{"version":3,"sources":["Table.js","Formulaire.js","User.js","Popup.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","variety","seedingOutdoor","seedingIndoor","harvest","exposition","timeToHarvest","onClick","removeCharacter","Table","month","label","value","Formulaire","initialState","state","handleMonthChange","opt","meta","name","options","setState","i","l","length","push","handleChange","event","target","addForm","handleSubmit","this","Form","Group","Label","Control","type","id","onChange","placeholder","Text","className","isMulti","as","Component","User","submitForm","sendInfo","email","Popup","JSON","stringify","text","closePopup","React","App","characters","showPopup","filter","character","back","info","seeds","togglePopup","bind","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c4bb65ad.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst TableHeader = () => {\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                <th>Variety</th>\r\n                <th>Seeding Outdoor</th>\r\n                <th>Seeding Indoor</th>\r\n                <th>Harvest</th>\r\n                <th>Exposition</th>\r\n                <th>Time to Harvest</th>\r\n                <th>Remove</th>\r\n            </tr>\r\n        </thead>\r\n    )\r\n}\r\n\r\nconst Table = (props) => {\r\n    const { characterData, removeCharacter } = props\r\n\r\n    return (\r\n        <table>\r\n            <TableHeader />\r\n            <TableBody characterData={characterData} removeCharacter={removeCharacter} />\r\n        </table>       \r\n    )\r\n}\r\n\r\nconst TableBody = (props) => {\r\n    const rows = props.characterData.map((row, index) => {\r\n        return (\r\n            <tr key={index}>\r\n                <td>{row.variety}</td>\r\n                <td>{row.seedingOutdoor}</td>\r\n                <td>{row.seedingIndoor}</td>\r\n                <td>{row.harvest}</td>\r\n                <td>{row.exposition}</td>\r\n                <td>{row.timeToHarvest}</td>\r\n                <td>\r\n                    <button onClick={() => props.removeCharacter(index)}>Delete</button>\r\n                </td>\r\n            </tr>\r\n\r\n        )\r\n    })\r\n\r\n    return <tbody>{rows}</tbody>\r\n        \r\n\r\n}\r\n\r\n\r\nexport default Table","import React, { Component } from 'react'\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { Dropdown } from 'semantic-ui-react';\r\nimport Select from 'react-select';\r\n\r\nconst month = [\r\n    { label: 'January', value: '1' },\r\n    { label: 'February', value: '2' },\r\n    { label: 'March', value: '3' },\r\n    { label: 'April', value: '4' },\r\n    { label: 'May', value: '5' },\r\n    { label: 'June', value: '6' },\r\n    { label: 'July', value: '7' },\r\n    { label: 'August', value: '8' },\r\n    { label: 'September', value: '9' },\r\n    { label: 'October', value: '10' },\r\n    { label: 'November', value: '11' },\r\n    { label: 'December', value: '12' },\r\n];\r\n\r\n\r\nclass Formulaire extends Component {\r\n\r\n\r\n\r\n    initialState = {\r\n        variety: '',\r\n        seedingOutdoor: '',\r\n        seedingIndoor: '',\r\n        harvest: '',\r\n        exposition: '',\r\n        timeToHarvest: '',\r\n    }\r\n\r\n    state = this.initialState\r\n\r\n\r\n    \r\n    handleMonthChange = (opt, meta) => {\r\n\r\n        \r\n        const  name  = meta.name\r\n        var options = opt;\r\n         \r\n        var value = [];\r\n        if (options == null) {\r\n            this.setState({\r\n                [name]: \"\"\r\n            })\r\n        }\r\n        else {\r\n             for (var i = 0, l = options.length; i < l; i++) {\r\n                value.push(options[i].value);\r\n             }\r\n        }\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n        handleChange = (event) => {\r\n            const {name, value} = event.target\r\n\r\n            this.setState({\r\n                [name]: value\r\n            })\r\n    }\r\n\r\n    \r\n    addForm = () => {\r\n        this.props.handleSubmit(this.state)\r\n        this.setState(this.initialState)\r\n    }\r\n    render() {\r\n        const {variety, seedingOutdoor, seedingIndoor, harvest, exposition, timeToHarvest} = this.state;\r\n\r\n        return (\r\n             <>\r\n                <Form>\r\n                    <Form.Group>\r\n                        <Form.Label>Variety</Form.Label>\r\n                        <Form.Control type=\"text\"\r\n                            name=\"variety\"\r\n                            id=\"variety\"\r\n                            value={variety}\r\n                            onChange={this.handleChange} placeholder=\"Enter plant variety\" />\r\n                        <Form.Text className=\"text-muted\">Please type plant variety</Form.Text>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Label>Seeding Outdoor</Form.Label>\r\n                    <Select\r\n                        name=\"seedingOutdoor\"\r\n                        id=\"seedingOutdoor\"\r\n                        options={month}\r\n                        isMulti\r\n                        onChange={this.handleMonthChange}\r\n                    />\r\n                    \r\n                    <Form.Label>Seeding Indoor</Form.Label>\r\n                    <Select\r\n                        name=\"seedingIndoor\"\r\n                        id=\"seedingIndoor\"\r\n                        options={month}\r\n                        isMulti\r\n                        onChange={this.handleMonthChange}\r\n                    />\r\n                    <Form.Label>Harvest</Form.Label>\r\n                    <Select\r\n                        name=\"harvest\"\r\n                        id=\"harvest\"\r\n                        options={month}\r\n                        isMulti\r\n                        onChange={this.handleMonthChange}\r\n                    />\r\n                    \r\n                    <Form.Group>\r\n                        <Form.Label>Exposition</Form.Label>\r\n                        <Form.Control as=\"select\" name=\"exposition\" id=\"exposition\" onChange={this.handleChange} >\r\n                            <option value=\"sunny\">Sunny</option>\r\n                            <option value=\"half-shadow\">Half Shadow</option>\r\n                            <option value=\"shadow\">Shadow</option>\r\n                        </Form.Control>\r\n                        <Form.Text className=\"text-muted\">Please choose what exposition the plant needs</Form.Text>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Time to harvest</Form.Label>\r\n                        <Form.Control type=\"text\"\r\n                            name=\"timeToHarvest\"\r\n                            id=\"timeToHarvest\"\r\n                            value={timeToHarvest}\r\n                            onChange={this.handleChange} placeholder=\"Enter days before harvest\" />\r\n                        <Form.Text className=\"text-muted\">Please type the time in days after seeding to harvest the first vegetable</Form.Text>\r\n                    </Form.Group>\r\n                    \r\n                    \r\n\r\n                    <input type=\"button\" value=\"Add\" onClick={this.addForm} />\r\n                </Form>\r\n                \r\n             </>  \r\n\r\n        );\r\n    }\r\n}\r\nexport default Formulaire;","import React, { Component } from 'react'\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\n\r\n\r\nclass User extends Component {\r\n\r\n        handleChange = (event) => {\r\n            const {name, value} = event.target\r\n\r\n            this.setState({\r\n                [name]: value\r\n            })\r\n    }\r\n        //fetch('https://chefphan.com/green-hand-api/', {\r\n        //    method: 'POST',\r\n        //\r\n        //    body: JSON.stringify({ title: 'React POST Request Example' }), \r\n\r\n         //   headers: { 'Content-Type': 'application/json' }\r\n        //})\r\n\r\n        //    .then(res => res.json())\r\n\r\n         //   .catch(error => console.error('Error:', error))\r\n\r\n         //   .then(response => console.log('Success:', response));\r\n    \r\n    submitForm = () => {\r\n\r\n        this.props.sendInfo(this.state)\r\n\r\n    }\r\n    render() {\r\n        const { email } = '';\r\n\r\n        return (\r\n             <>\r\n                <Form>\r\n                    <Form.Group>\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"text\"\r\n                            name=\"email\"\r\n                            id=\"email\"\r\n                            value={email}\r\n                            onChange={this.handleChange} placeholder=\"Enter email\" />\r\n                        <Form.Text className=\"text-muted\">Please type email</Form.Text>\r\n                    </Form.Group>\r\n                    <input type=\"button\" value=\"Submit new datas\" onClick={this.submitForm} />\r\n                </Form>\r\n                \r\n             </>  \r\n\r\n        );\r\n    }\r\n}\r\nexport default User;","import React from 'react';\r\n\r\n\r\nclass Popup extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='popup'>\r\n                <div className='popup\\_inner'>\r\n                    \r\n                    <pre id=\"json\">{JSON.stringify(this.props.text)}</pre>\r\n                    <button onClick={this.props.closePopup}>close me</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Popup;","import React, { Component } from 'react'\r\nimport Table from './Table'\r\nimport Formulaire from './Formulaire'\r\nimport User from './User'\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Popup from './Popup'\r\n\r\n\r\n\r\n\r\nclass App extends Component {\r\n    state = {\r\n        characters: [],\r\n        showPopup: false , \r\n    }\r\n    removeCharacter = (index) => {\r\n        const { characters } = this.state\r\n\r\n        this.setState({\r\n            characters: characters.filter((character, i) => {\r\n                return i !== index\r\n            }),\r\n        })\r\n    }\r\n    \r\n    togglePopup() {\r\n        this.setState({\r\n            showPopup: !this.state.showPopup\r\n        });\r\n    }  \r\n\r\n    handleSubmit = (character) => {\r\n        this.setState({ characters: [...this.state.characters, character] })\r\n    }\r\n    sendInfo = (characters) => {\r\n\r\n        this.setState({\r\n            showPopup: true,\r\n            back: {\r\n                email: characters.email,\r\n                info: \"\",\r\n                seeds: [...this.state.characters]\r\n            }\r\n        })\r\n          \r\n    }\r\n    render() {\r\n        const { characters } = this.state\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <User sendInfo={this.sendInfo} />\r\n                {this.state.showPopup ?\r\n                    <Popup\r\n                        text={this.state.back}\r\n                        closePopup={this.togglePopup.bind(this)}\r\n                    />  \r\n                    : null\r\n                     } \r\n                <Table characterData={characters} removeCharacter={this.removeCharacter} />\r\n                <Formulaire handleSubmit={this.handleSubmit} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App'\r\n//import App from './Api';\r\n//import App from './App';\r\n//import reportWebVitals from './reportWebVitals';\r\n\r\n//ReactDOM.render(\r\n//  <React.StrictMode>\r\n//    <App />\r\n//  </React.StrictMode>,\r\n//  document.getElementById('root')\r\n//);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}