{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","email","variety","localisation","seeding","seedingIndoor","harvest","exposition","time2crop","onClick","removeCharacter","Table","Form","initialState","state","handleChange","event","target","name","value","setState","fetch","method","body","JSON","stringify","title","headers","then","res","json","catch","error","console","response","log","submitForm","handleSubmit","this","htmlFor","type","id","onChange","Component","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.be958311.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst TableHeader = () => {\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                <th>Email Adress</th>\r\n                <th>Variety</th>\r\n                <th>Localisation</th>\r\n                <th>Seeding</th>\r\n                <th>Seeding Indoor</th>\r\n                <th>Harvest</th>\r\n                <th>Exposition</th>\r\n                <th>Time2crop</th>\r\n                <th>Remove</th>\r\n            </tr>\r\n        </thead>\r\n    )\r\n}\r\n\r\nconst Table = (props) => {\r\n    const { characterData, removeCharacter } = props\r\n\r\n    return (\r\n        <table>\r\n            <TableHeader />\r\n            <TableBody characterData={characterData} removeCharacter={removeCharacter} />\r\n        </table>\r\n    )\r\n}\r\n\r\nconst TableBody = (props) => {\r\n    const rows = props.characterData.map((row, index) => {\r\n        return (\r\n            <tr key={index}>\r\n                <td>{row.email}</td>\r\n                <td>{row.variety}</td>\r\n                <td>{row.localisation}</td>\r\n                <th>{row.seeding}</th>\r\n                <th>{row.seedingIndoor}</th>\r\n                <th>{row.harvest}</th>\r\n                <th>{row.exposition}</th>\r\n                <th>{row.time2crop}</th>\r\n                <td>\r\n                    <button onClick={() => props.removeCharacter(index)}>Delete</button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    })\r\n\r\n    return <tbody>{rows}</tbody>\r\n}\r\n\r\n\r\nexport default Table","import React, { Component } from 'react'\r\n\r\nclass Form extends Component {\r\n\r\n    initialState = {\r\n        email: '',\r\n        variety: '',\r\n        localisation: '',\r\n        seeding: '',\r\n        seedingIndoor: '',\r\n        harvest: '',\r\n        exposition: '',\r\n        time2crop: '',\r\n    }\r\n\r\n    state = this.initialState\r\n\r\n\r\n    handleChange = (event) => {\r\n        const {name, value} = event.target\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n\r\n        fetch('https://chefphan.com/green-hand-api/', {\r\n            method: 'POST',\r\n\r\n            body: JSON.stringify({ title: 'React POST Request Example' }), \r\n\r\n            headers: { 'Content-Type': 'application/json' }\r\n        })\r\n\r\n            .then(res => res.json())\r\n\r\n            .catch(error => console.error('Error:', error))\r\n\r\n            .then(response => console.log('Success:', response));\r\n    }\r\n    submitForm = () => {\r\n        this.props.handleSubmit(this.state)\r\n        this.setState(this.initialState)\r\n    }\r\n    render() {\r\n        const {email, variety, localisation, seeding, seedingIndoor, harvest, exposition, time2crop} = this.state;\r\n\r\n        return (\r\n            <form>\r\n                <label htmlFor=\"email\">Email adress</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    value={email}\r\n                    onChange={this.handleChange} />\r\n                <label htmlFor=\"variety\">Variety</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"variety\"\r\n                    id=\"variety\"\r\n                    value={variety}\r\n                    onChange={this.handleChange} />\r\n                <label htmlFor=\"localisation\">Localisation</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"localisation\"\r\n                    id=\"localisation\"\r\n                    value={localisation}\r\n                    onChange={this.handleChange} />\r\n                <label htmlFor=\"seeding\">Seeding</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"seeding\"\r\n                    id=\"seeding\"\r\n                    value={seeding}\r\n                    onChange={this.handleChange} />\r\n                <label htmlFor=\"seedingIndoor\">Seeding Indoor</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"seedingIndoor\"\r\n                    id=\"seedingIndoor\"\r\n                    value={seedingIndoor}\r\n                    onChange={this.handleChange} />\r\n                <label htmlFor=\"harvest\">Harvest</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"harvest\"\r\n                    id=\"harvest\"\r\n                    value={harvest}\r\n                    onChange={this.handleChange} />\r\n                <label htmlFor=\"exposition\">Exposition</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"exposition\"\r\n                    id=\"exposition\"\r\n                    value={exposition}\r\n                    onChange={this.handleChange} />\r\n                <label htmlFor=\"time2crop\">Time2crop</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"time2crop\"\r\n                    id=\"time2crop\"\r\n                    value={time2crop}\r\n                    onChange={this.handleChange} />\r\n                <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\r\n            </form>\r\n\r\n        );\r\n    }\r\n}\r\nexport default Form;","import React, { Component } from 'react'\nimport Table from './Table'\nimport Form from './Form'\n\n\n\n\nclass App extends Component {\n    state = {\n        characters: [],\n    }\n    removeCharacter = (index) => {\n        const { characters } = this.state\n\n        this.setState({\n            characters: characters.filter((character, i) => {\n                return i !== index\n            }),\n        })\n    }\n    handleSubmit = (character) => {\n        this.setState({ characters: [...this.state.characters, character] })\n    }\n    render() {\n        const { characters } = this.state\n\n        return (\n            <div className=\"container\">\n                <Table characterData={characters} removeCharacter={this.removeCharacter} />\n                <Form handleSubmit={this.handleSubmit} />\n            </div>\n        )\n    }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\n//import App from './Api';\n//import App from './App';\n//import reportWebVitals from './reportWebVitals';\n\n//ReactDOM.render(\n//  <React.StrictMode>\n//    <App />\n//  </React.StrictMode>,\n//  document.getElementById('root')\n//);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}